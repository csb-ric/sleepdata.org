- agreement_event_id = (@agreement_event.new_record? ? "new" : @agreement_event.id)
.comment-outer
  .comment-left-fixed
    = profile_picture_tag(@agreement_event.user, size: 48)
  .comment-right-fluid
    .comment-box
      .comment-header
        - if @agreement_event.new_record?
          .float-right
            = link_to reviewer_supporting_documents_path(@data_request), class: "link-blend" do
              %i.fa.fa-paperclip
        - else
          .float-right
            = link_to "Cancel", agreement_agreement_event_path(@data_request, @agreement_event), remote: true, method: :get, class: "btn btn-light btn-sm"
            = link_to "##{@agreement_event.number}", "#c#{@agreement_event.number}", class: "btn btn-link btn-sm"
        %strong= @agreement_event.user.username
        = link_to (@agreement_event.new_record? ? "Write" : "Edit"), "#", data: { object: "view-agreement-event", action: "write", agreement_event_id: agreement_event_id }, class: "comment-tab active", tabindex: "-1"
        = link_to "Preview", "#", data: { object: "view-agreement-event view-agreement-event-preview", action: "preview", agreement_event_id: agreement_event_id, agreement_id: @agreement_event.agreement_id }, class: "comment-tab", tabindex: "-1"
        - if @agreement_event.new_record?
          - if @data_request.organization.principal_reviewer?(current_user)
            = link_to "Review", "#", data: { object: "view-agreement-event", action: "review", agreement_event_id: agreement_event_id }, class: "comment-tab", tabindex: "-1"
            = link_to "Datasets", "#", data: { object: "view-agreement-event", action: "datasets", agreement_event_id: agreement_event_id }, class: "comment-tab", tabindex: "-1"
          = render "agreement_events/tags"
      .comment-body
        %div{ id: "agreement_event_write_#{agreement_event_id}" }
          = form_with model: [@data_request, @agreement_event], url: @agreement_event.new_record? ? agreement_agreement_events_path(@data_request) : agreement_agreement_event_path(@data_request, @agreement_event) do |form|
            = form.text_area :comment, rows: [[7, @agreement_event.comment.to_s.count("\n") + 1].max, 25].min, class: "comment-control filedrag-container", data: { object: "expandable-text-area dropfile text-area-autocomplete", default_rows: 7, mentions: User.current.pluck(:username).reject(&:blank?).uniq.sort, upload_url: upload_images_path(update: "#agreement_event_comment_#{agreement_event_id}", format: "js"), fallback_url: new_image_path, log_id: "#agreement_event_log_#{agreement_event_id}" }, id: "agreement_event_comment_#{agreement_event_id}", placeholder: "Write a comment"
            - if @agreement_event.errors.any?
              .small.text-danger Comment can't be blank.
            .filedrag{ id: "agreement_event_log_#{agreement_event_id}" }
              Drag images above to insert into post.
            - button_text = @agreement_event.new_record? ? "Comment" : "Update"
            .mt-2
              = form.submit button_text, class: "btn btn-primary", data: { disable_with: "Submitting..." }
              - if @agreement_event.new_record? && @agreement_event.data_request.final_legal_document.approval_process == "committee"
                - @data_request_review = @data_request.data_request_reviews.find_by(user: current_user)
                - if @data_request_review&.vote_cleared?
                  .float-right
                    = link_to @data_request_review.approved == true ? "Re-approve" : "Approve", "#", data: { object: "review-cast-vote", approved: "1", path: vote_review_path(@data_request) }, class: "btn btn-outline-success"
                    = link_to @data_request_review.approved == false ? "Re-reject" : "Reject", "#", data: { object: "review-cast-vote", approved: "0", path: vote_review_path(@data_request) }, class: "btn btn-outline-danger"
                - elsif @data_request_review&.approved == true
                  .float-right
                    = link_to "Approved", "#", data: { object: "review-cast-vote", approved: "1", path: vote_review_path(@data_request) }, class: "btn btn-success disabled", disabled: true
                    = link_to "Reject", "#", data: { object: "review-cast-vote", approved: "0", path: vote_review_path(@data_request) }, class: "btn btn-outline-danger"
                - elsif @data_request_review&.approved == false
                  .float-right
                    = link_to "Approve", "#", data: { object: "review-cast-vote", approved: "1", path: vote_review_path(@data_request) }, class: "btn btn-outline-success"
                    = link_to "Rejected", "#", data: { object: "review-cast-vote", approved: "0", path: vote_review_path(@data_request) }, class: "btn btn-danger disabled", disabled: true
                - else
                  .float-right
                    = link_to "Approve", "#", data: { object: "review-cast-vote", approved: "1", path: vote_review_path(@data_request) }, class: "btn btn-outline-success"
                    = link_to "Reject", "#", data: { object: "review-cast-vote", approved: "0", path: vote_review_path(@data_request) }, class: "btn btn-outline-danger"

        %div{ id: "agreement_event_preview_#{agreement_event_id}", style: "display: none;min-height: 233px;" }
        - if @agreement_event.new_record?
          - if @data_request.organization.principal_reviewer?(current_user)
            %div{ id: "agreement_event_review_#{agreement_event_id}", style: "display: none;min-height: 233px;" }
              = render "principal_reviewer/data_requests/form", data_request: @data_request
            %div{ id: "agreement_event_datasets_#{agreement_event_id}", style: "display: none;min-height: 233px;" }
              = render "principal_reviewer/data_requests/datasets", data_request: @data_request
