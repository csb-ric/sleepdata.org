%div{ style: 'min-height: 200px' }
  - indexed_files = @dataset.indexed_files(path, page+1)
  - if indexed_files.size == 0
    = render 'datasets/nofiles', path: path
  - else
    %table.table.table-condensed.table-hover
      %col{ width: '1px' }
      - indexed_files.each do |folder, file_name, is_file, file_size, file_time|
        - is_public = @dataset.public_file?(folder)
        - url = files_dataset_path( @dataset ) + "#{'/m/browser' if is_file}" + '/' + folder
        %tr{ class: "#{'warning' if file_name == params[:f]}" }
          %td
            %span.glyphicon{ class: "glyphicon-#{is_file ? 'file' : 'folder-close'}" }
          %td
            = link_to_if (!is_file || is_public || @dataset.grants_file_access_to?(current_user)), file_name, url, data: { object: "#{'autodownload' if is_file and file_name == params[:f]}" }
            - if ENV['altamira_url'].present? and /\.edf$/i =~ file_name and is_file and (is_public or @dataset.grants_file_access_to?(current_user))
              = link_to "#{ENV['altamira_url']}?slug=#{@dataset.slug}&path=#{[path, file_name].join('/')}&auto=.", class: "btn btn-xs btn-default"do
                %span.glyphicon.glyphicon-eye-open
                Preview Online
          %td= file_time if is_file
          %td.text-right
            = number_to_human_size(file_size) if is_file
            - if is_file
              - if is_public
                %span.glyphicon.glyphicon-globe
              - if current_user and @dataset.editors.pluck(:id).include?(current_user.id)
                - if is_public
                  = link_to set_public_file_dataset_path(@dataset, public: '0', path: folder ), method: :post do
                    %span.glyphicon.glyphicon-eye-close
                - else
                  = link_to set_public_file_dataset_path(@dataset, public: '1', path: folder ), method: :post do
                    %span.glyphicon.glyphicon-globe

- if @dataset.grants_file_access_to?(current_user)
  = render 'datasets/download_command'
- else
  - content_for :call_to_action do
    .call-to-action
      - agreements = (current_user ? @dataset.agreements.where( user_id: current_user.id ) : Agreement.none)
      - if agreement = agreements.where(status: 'submitted').first
        .call-to-action-body
          We are currently reviewing your
          = status_helper_simple(agreement)
          = succeed '.' do
            = link_to 'DAUA', submissions_path
        .call-to-action-body
          Please contact us directly at
          = mail_to 'support@sleepdata.org'
          with any questions.
      - elsif agreement = agreements.where(status: 'resubmit').first
        .call-to-action-body
          You are required to
          = status_helper_simple(agreement)
          your DAUA.
        .call-to-action-body
          Please make the changes requested by the reviewer and
          = succeed '.' do
            = link_to 'resubmit your DAUA', submissions_path
      - elsif agreement = agreements.expired.first
        - agreement.update status: 'expired'
        .call-to-action-body
          Your DAUA is
          = succeed '.' do
            = status_helper_simple(agreement)
        .call-to-action-body
          You will need to
          = link_to 'renew your DAUA', submissions_path
          to continue downloading files.
      - elsif agreement = agreements.where( status: ['', 'started', nil] ).first
        .call-to-action-body
          You have
          = status_helper_simple(agreement)
          filling out a
          - if agreement.fully_filled_out?
            = succeed '.' do
              = link_to 'DAUA', proof_agreement_path(agreement)
          - else
            = succeed '.' do
              = link_to 'DAUA', step_agreement_path(agreement, step: agreement.current_step)
        .call-to-action-body
          Please contact us directly at
          = mail_to 'support@sleepdata.org'
          with any questions regarding the process.
      - else
        .call-to-action-body
          To download files:
          = link_to 'Fill out a Data Access and Use Agreement', submissions_path(dataset: @dataset), class: 'btn btn-lg btn-call-to-action'
