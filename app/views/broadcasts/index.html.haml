- @title = "Articles"

- render "themes/theme"
- content_for :header do
  .float-right
    = link_to plus_or("New Article"), new_broadcast_path, class: "btn btn-primary btn-shadow"
    = render "layouts/per_page", per_page: 40, object_count: @broadcasts.total_count
  = @title
= render "broadcasts/tabs"
-# content_for :sidebar, render("broadcasts/sidebar")

- if @broadcasts.present?
  .dashboard-container.dashboard-table
    %table.table.table-striped.table-borderless.table-hover.table-sticky
      %col{ width: "1px" }
      %col
      %col.d-none.d-sm-table-column
      %col.d-none.d-lg-table-column
      %col.d-none.d-lg-table-column
      %col{ width: "1px" }

      %thead
        %tr
          %th
          %th.py-2
            = form_with url: broadcasts_path, method: :get, local: true, skip_enforcing_utf8: true do |form|
              = form.text_field :search, value: params[:search], placeholder: "Search articles", autocomplete: "off", class: "table-cell-search-input border rounded"

          %th.d-none.d-sm-table-cell Publish date
          %th.text-center.d-none.d-lg-table-cell Pinned
          %th.text-center.d-none.d-lg-table-cell Archived
          %th.text-center
            .d-none.d-sm-inline-block Actions

      %tbody
        - @broadcasts.each do |broadcast|
          %tr
            %td.text-center= render "layouts/draft_published", published: broadcast.published?
            %td= link_to broadcast.title, broadcast
            %td.nowrap.d-none.d-sm-table-cell= broadcast.publish_date.strftime "%a %b %-d, %Y"
            %td.text-center.d-none.d-lg-table-cell= simple_check broadcast.pinned
            %td.text-center.d-none.d-lg-table-cell= simple_check broadcast.archived
            %td= render "layouts/edit_delete_dropdown", edit_url: edit_broadcast_path(broadcast), delete_url: broadcast, delete_confirmation: "Delete #{broadcast.title}?"
  .center-horizontally= paginate @broadcasts, theme: "bootstrap"
- else
  .jumbotron.jumbotron-custom-text
    %i.fa.fa-clone.mr-1
    No articles found.
    = link_to "Start over", broadcasts_path if params[:search].present?
