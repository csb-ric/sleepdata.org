- @title = "#{"#{params[:folder].gsub('/', ' - ')} - " if params[:folder].present?} #{@dataset.slug.upcase} Variables"

= render 'datasets/header'

= render 'variables/folder_breadcrumb', folder: params[:folder]

.content-container
  = form_tag dataset_variables_path(@dataset), method: :get, class: 'form-inline', id: 'collection_form' do
    = hidden_field_tag 'common', params[:common]
    = text_field_tag 's', params[:s], class: 'form-control'
    = succeed ' ' do
      - if params[:common] == '1'
        = link_to '#', class: 'btn btn-warning', data: { object: 'commonly-used-submit', value: '0', target: '#collection_form' } do
          %span.glyphicon.glyphicon-star
      - else
        = link_to '#', class: 'btn btn-default', data: { object: 'commonly-used-submit', value: '1', target: '#collection_form' } do
          %span.glyphicon.glyphicon-star-empty
    = submit_tag 'Search', class: 'btn btn-primary', name: nil
    = link_to 'Reset', dataset_variables_path(@dataset), class: 'btn btn-default'

.content-container
  = render 'variables/per_page', per_page: 100, object_count: @total_count

  .row
    .col-sm-8.col-lg-9
      - [['hidden-sm hidden-xs', ''], ['hidden-md hidden-lg', 'btn-sm']].each do |hidden_classes, btn_size_class|
        .btn-toolbar{ class: hidden_classes, role: "toolbar" }
          .btn-group{ style: "padding-bottom:10px" }
            - s = (params[:s].blank? ? nil : params[:s])
            - if params[:folder].blank?
              = link_to '/', dataset_variables_path(@dataset, view: params[:view], common: params[:common]), class: "btn #{btn_size_class} btn-primary"
            - else
              = link_to '..', dataset_variables_path(@dataset, s: s, folder: params[:folder].split('/')[0..-2].join('/'), view: params[:view], common: params[:common]).gsub("%2F","/"), class: "btn #{btn_size_class} btn-primary"
              - unless params[:folder].blank?
                - params[:folder].to_s.split('/').each_with_index do |partial_folder, index|
                  - full_folder = params[:folder].to_s.split('/')[0..index].join('/')
                  = link_to partial_folder, dataset_variables_path(@dataset, s: s, folder: full_folder, view: params[:view], common: params[:common]).gsub("%2F","/"), class: "btn #{btn_size_class} btn-primary"
          - @folders.each do |folder|
            - full_folder = [params[:folder].blank? ? nil : params[:folder], folder].compact.join('/')
            = link_to folder, dataset_variables_path(@dataset, s: s, folder: full_folder, view: params[:view], common: params[:common]).gsub("%2F","/"), class: "btn #{btn_size_class} btn-default", style: "margin-bottom:10px"

.content-container
  %table.table.table-striped
    %thead
      %tr
        %th
        %th Name
        %th.nowrap Display Name
        %th Folder
        %th Description
        - unless params[:s].blank?
          %th Relevance
          - if current_user && current_user.system_admin?
            %th Labels
            %th.nowrap Rank Score
            %th Reason

    - @variables.sort { |a,b| a.rank_sort_order(params[:s]) <=> b.rank_sort_order(params[:s]) }.each_with_index do |variable, index|
      %tr
        %td
          - if variable.commonly_used?
            %span.glyphicon.glyphicon-star.text-warning
          - if false
            - if File.file?( File.join( variable.dataset.root_folder, 'dd', 'images', variable.version.to_s, "#{variable.name}.png") )
              %img.lazy{ width: "27", height: "18", style: "max-width: 100%;min-width:27px;max-height:18px;display:block;vertical-align:text-bottom",  data: { original: image_dataset_variable_path(variable.dataset, variable) } }
        %td= link_to variable.name, dataset_variable_path(variable.dataset, variable, view: 'list')
        %td= variable.display_name
        %td.nowrap= variable.folder
        %td= variable.description
        - unless params[:s].blank?
          %td= render 'variables/relevance', variable: variable
          - if current_user && current_user.system_admin?
            %td= variable.labels
            %td= variable.rank(params[:s])[:score]
            %td.nowrap= variable.rank(params[:s])[:reasons].join('<br />').html_safe

  - if false
    .center= paginate @variables, theme: 'contour'
