- @title = "#{@variable.name.upcase} - #{@dataset.slug.upcase} Variables"
- @keywords = @variable.variable_labels.pluck(:name).join(", ")

= render "variables/header"

.row.mb-3
  .col-md-3.d-none.d-md-block
    = render "variables/menu"
  .col-md-9
    %h1.variable-header= @variable.display_name

    - if @variable.known_issues.present?
      .alert.alert-danger{ role: "alert" }
        %strong KNOWN ISSUES
        Please be sure to check the
        = link_to "known issues", known_issues_dataset_variable_path(@dataset, @variable, v: params[:v]), class: "alert-link"
        before using this variable in analysis.

    %table.table.table-borderless{ style: "margin-top: 20px;" }
      %col{ width: "1px" }
      %col
      - if @variable.description.present?
        %tr
          %td{ style: "font-weight: bold;" } Description
          %td.variable-description= simple_markdown(@variable.description, allow_lists: false)

      - if @variable.calculation.present?
        %tr
          %td{ style: "font-weight: bold;" } Calculation
          %td
            .variable-calculation= calculation_helper @variable

      - if @variable.units.present?
        %tr
          %td{ style: "font-weight: bold;" } Units
          %td
            %code= @variable.units

      - if @variable.domain
        %tr
          %td{ style: "font-weight: bold;" }
            Domain
          %td
            %div{ style: "margin-bottom: 10px;" }
              %code= @variable.domain.name
            %ul.list-unstyled
              - @variable.domain.domain_options.each do |domain_option|
                %li= "#{domain_option.value}: #{domain_option.display_name}"


      - if @variable.variable_type.present?
        %tr
          %td{ style: "font-weight: bold;" } Type
          %td
            %code= @variable.variable_type

      - if false
        - if @variable.variable_type == "integer" || @variable.variable_type == "numeric"
          %tr
            %td{ style: "font-weight: bold;" } Stats
            %td{ style: "padding-top: 0;" }
              %table.table.table-fixed.table-borderless
                %thead
                  %tr
                    %th N
                    %th Mean
                    %th StdDev
                    %th Median
                    %th Min
                    %th Max
                    %th Unknown
                    %th Total
                %tbody
                  %tr
                    %td= @variable.stats_n
                    %td= "%0.1f" % @variable.stats_mean if @variable.stats_mean
                    %td= "Â± %0.1f" % @variable.stats_stddev if @variable.stats_stddev
                    %td= "%0.1f" % @variable.stats_median if @variable.stats_median
                    %td
                      - if @variable.variable_type == "numeric" && @variable.stats_min
                        = "%0.1f" % @variable.stats_min
                      - else
                        = @variable.stats_min
                    %td
                      - if @variable.variable_type == "numeric" && @variable.stats_max
                        = "%0.1f" % @variable.stats_max
                      - else
                        = @variable.stats_max
                    %td= @variable.stats_unknown
                    %td= @variable.stats_total


    - json = JSON.parse(@variable.spout_stats) rescue json = nil
    #charts-info.d-none{ data: { charts: "#{json.to_json}" } }

    - charts = []
    - charts = json["charts"].keys.collect { |k| [k.titleize, k] } if json.is_a?(Hash) && json["charts"].is_a?(Hash)
    - chart = charts.first unless chart

    - if charts.present?
      #chart-container{ style: "min-width: 200px; max-width: 800px; height: 400px; margin: 0 auto 20px auto;" }

    - if json && json["tables"]
      - (json["tables"] || []).each do |key, tables|
        .d-none{ data: { chart_name: key } }
          - [tables].flatten.each do |table|
            - if table.is_a? Hash
              %h3.brand.center= table["title"]
              %h5.center= table["subtitle"]
              .table-responsive
                %table.table.table-hover
                  %thead
                    - (table["headers"] || []).each do |headers|
                      %tr
                        - headers.each do |cell|
                          = render "variables/table_cell", cell: cell, type: :th
                  %tfoot
                    - (table["footers"] || []).each do |footers|
                      %tr
                        - footers.each do |cell|
                          = render "variables/table_cell", cell: cell, type: :td
                  %tbody
                    - (table["rows"] || []).each do |rows|
                      %tr
                        - rows.each do |cell|
                          = render "variables/table_cell", cell: cell, type: :td

.d-block.d-md-none= render "variables/menu"
