- @title = "Reviews"

- content_for :header do
  = @title
  = render "search/toggle"
= render "internal/tabs"
- content_for :breadcrumbs do
  = render "layouts/per_page_breadcrumbs", per_page: 10, object_count: @data_requests.total_count
  %ol
    %li.breadcrumb-muted reviews
- content_for :sidebar, render("internal/sidebar")

= render "search/simple", url: reviews_path

- if params[:voted] == "0" && @data_requests.present?
  - count = @data_requests.count

  .jumbotron.jumbotron-custom-text
    = icon("fas", "check-square", class: "mr-1")
    Vote required on the following
    - if count == 1
      data request.
    - else
      data requests.
    = link_to "Show all data requests.", reviews_path

  - if false
    .p-3.mb-2.bg-dark.text-white.text-center
      Vote required on the following
      - if count == 1
        data request.
      - else
        data requests.
      = link_to "Show all data requests.", reviews_path

- if @data_requests.present?
  .dashboard-container.dashboard-table
    %table.table.table-striped.table-borderless.table-hover.table-sticky
      %col{ width: "1px" }
      %col
      %col.d-none.d-sm-table-column
      %col.d-none.d-lg-table-column
      %thead.table-light
        %tr
          %th.text-center
            .dropdown{ style: "display: inline-block;" }
              = link_to icon("fas", "filter"), "#", data: { target: "#", toggle: "dropdown" }, role: "button", aria: { haspopup: "true", expanded: "false" }
              .dropdown-menu
                - selected = params[:status].blank?
                = link_to reviews_path(order: params[:order]), style: selected ? "font-weight:bold;" : "", class: "dropdown-item" do
                  = simple_check selected
                  All
                .dropdown-divider
                - DataRequest::STATUS.each do |label, value|
                  - selected = params[:status] == value
                  = link_to reviews_path(order: params[:order], status: value), style: selected ? "font-weight:bold;" : "", class: "dropdown-item" do
                    = simple_check selected
                    = label.titleize
          %th= order_to "Data Request", primary: "id"
          %th.d-none.d-sm-table-cell.nowrap= order_to "Submitted", primary: "submitted desc", secondary: "submitted"
          %th.d-none.d-lg-table-cell Reviewers

      - @data_requests.each do |data_request|
        %tr
          %td.text-center= short_status_helper(data_request)
          %td
            = profile_picture_tag data_request.user, size: 18, style: "vertical-align:text-bottom;width:18px"
            = link_to data_request.complex_name_or_id, review_path(data_request)
          %td.d-none.d-sm-table-cell.nowrap
            - if data_request.resubmitted_at
              = data_request.resubmitted_at.strftime("%b %-d, %Y")
              = link_to "#", rel: "tooltip", title: "Resubmitted", data: { object: "suppress-click", container: "body", placement: "right" } do
                = icon("fas", "info-circle")
            - elsif data_request.submitted_at
              = data_request.submitted_at.strftime("%b %-d, %Y")
          %td.d-none.d-lg-table-cell.nowrap= render "reviews/reviewers", data_request: data_request

  .center-horizontally= paginate @data_requests, theme: "bootstrap"
- else
  - if params[:voted] == "0"
    .jumbotron.jumbotron-custom-text
      = icon("fas", "check-square", class: "mr-1")
      Voting complete!
      = link_to "Show all data requests.", reviews_path
  - else
    .jumbotron.jumbotron-custom-text
      = icon("far", "clone", class: "mr-1")
      No data requests found.
      = link_to "Start over", reviews_path if params[:search].present?
