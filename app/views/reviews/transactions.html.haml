- @agreement_transactions = @data_request.agreement_transactions
- agreement_transaction_total = @agreement_transactions.count

- @title = "Transactions"
- @menu_title = "#{@data_request.name} #{@title}"

- content_for :header do
  .header-container
    .container
      %h1.page-heading
        = @title
  .breadcrumb-container.mb-0
    .container
      %ol
        %li= link_to "Reviews", reviews_path
        %li= link_to @data_request.name, review_path(@data_request)

- ignore_mask_attributes = ["irb", "last_submitted_at", "submitted_at", "resubmitted_at", "status", "comments", "secured_device", "human_subjects_protections_trained", "unauthorized_to_sign", "has_read_step3", "has_read_step5", "data_user_type", "irb_evidence_type"]
- @agreement_transactions.each_with_index do |t, index|
  .dashboard-container
    %table.table.table-borderless.table-striped.table-fixed
      %thead
        %tr
          %th Transaction Number
          %th User
          %th Type
          %th Created
      %tbody
        %tr
          %td.breakword= "##{agreement_transaction_total - index}"
          - if t.user
            %td.breakword.small
              = image_tag t.user.avatar_url(16, "identicon"), size: "16x16", alt: "", style: "vertical-align: middle", class: "rounded"
              = t.user.name
              &middot;
              = t.remote_ip
          - else
            %td.breakword.text-muted
              Public User &middot;
              = t.remote_ip
          %td.breakword.small= t.transaction_type
          %td.breakword.small= t.created_at.strftime("%b %d, %Y at %l:%M %p")
    %table.table.table-borderless.table-striped.table-fixed
      %thead
        %tr
          %th Attribute
          %th Value Before
          %th Diff
          %th Value After
      - t.agreement_transaction_audits.each do |a|
        - if a.agreement_attribute_name == "dataset_ids"
          - a.value_before = Dataset.where(id: a.value_before.to_s.split(/[\[\],]/)).pluck(:slug).sort
          - a.value_after = Dataset.where(id: a.value_after.to_s.split(/[\[\],]/)).pluck(:slug).sort
        %tr
          %td.small.overflow-hover
            = a.agreement_attribute_name
          %td.breakword{ class: "#{"text-muted" if a.value_before == nil or a.value_before == ""}" }
            - if a.value_before == nil
              nil
            - elsif a.value_before == ""
              %span{ rel: "tooltip", title: "Blank Response", data: { placement: "right" } }
                %i.fa.fa-ban
            - else
              = a.value_before
          %td.breakword
            - unless ignore_mask_attributes.include?(a.agreement_attribute_name)
              - diff = Differ.diff_by_char(a.value_after.to_s, a.value_before.to_s)
              = diff.format_as(:html).html_safe
          %td.breakword{ class: "#{"text-muted" if a.value_after == nil or a.value_after == ""}" }
            - if a.value_after == nil
              nil
            - elsif a.value_after == ""
              %span{ rel: "tooltip", title: "Blank Response", data: { placement: "right" } }
                %i.fa.fa-ban
            - else
              = a.value_after
