= form_for [@topic, @comment], remote: true do |f|
  - if @comment.errors.any?
    .callout.callout-danger
      %strong
      = pluralize @comment.errors.count, 'error'
      prohibited this comment from being saved
      %ul
        - @comment.errors.full_messages.each do |message|
          %li= message

  .comment-outer
    .comment-left-fixed
      = image_tag current_user.avatar_url(48, 'identicon'), size: '48x48', alt: ''

    .comment-right-fluid
      .comment-box
        .comment-header
          %strong= @comment.user.forum_name
          = link_to 'Edit', '#', data: { object: 'view-comment-write', comment_id: @comment.id }, class: 'comment-tab active', tabindex: '-1'
          = link_to 'Preview', '#', data: { object: 'view-comment-preview', comment_id: @comment.id, topic_id: @topic.to_param }, class: 'comment-tab', tabindex: '-1'
          = link_to 'Markup', '#', data: { object: 'view-comment-markup', comment_id: @comment.id }, class: 'comment-tab', tabindex: '-1'
          = link_to 'Cancel', topic_comment_path(@topic, @comment), remote: true, method: :get, class: 'btn btn-default btn-xs pull-right' unless @comment.new_record?
        .comment-body
          %div{ id: "comment_write_#{@comment.id}" }
            = f.text_area :description, rows: 7, class: 'comment-control filedrag-container', data: { object: 'expandable-text-area dropfile text-area-autocomplete', default_rows: 7, mentions: User.current.pluck(:username).reject(&:blank?).uniq.sort, upload_url: upload_images_path(update: "#comment_description_#{@comment.id}", format: 'js'), fallback_url: new_image_path, log_id: "#comment_log_#{@comment.id}" }, id: "comment_description_#{@comment.id}", placeholder: 'Write a comment'
            .filedrag{ id: "comment_log_#{@comment.id}" }
              Drag images above to insert into post.
          %div{ id: "comment_preview_#{@comment.id}", style: 'display:none;min-height: 187px' }
          %div{ id: "comment_markup_#{@comment.id}", style: 'display:none;min-height: 187px' }
            = render 'topics/markup'

          - button_text = @comment.new_record? ? 'Comment' : 'Update'
          = f.submit button_text, class: 'btn btn-primary', data: { disable_with: 'Submitting...' }, style: 'margin-top:10px'
