.col-12.col-md-3.col-xl-2.sidebar-wrapper
  .sidebar
    .sidebar-header.d-flex.align-items-center.text-center
      .mr-auto.mx-md-auto.mt-md-4
        .d-none.d-md-block
          = link_to settings_profile_path(anchor: "picture") do
            = profile_picture_tag current_user
        .text-md-center= current_user.full_name_was
        .d-none.d-md-block.text-md-center
          %small.text-muted
            Member since
            = current_user.created_at.strftime("%b %Y")

      %button.navbar-light.navbar-toggler.d-md-none{ type: "button", data: { toggle: "collapse", target: "#sidebar-nav-wrapper" }, aria: { controls: "sidebar-nav-wrapper", expanded: "false", label: "Toggle navigation" }, style: "border: 1px solid rgba(0, 0, 0, 0.5);" }
        %span.navbar-toggler-icon

    - settings_pages = [{ name: "Profile", url: settings_profile_path }, { name: "Account", url: settings_account_path }, { name: "Email", url: settings_email_path }, { name: "Data Requests", url: settings_data_requests_path }]
    - dashboard_pages = [{ name: "Overview", url: dashboard_path }, { name: "Data Requests", url: data_requests_path, active: params[:controller] == "data_requests" }, { name: "Token", url: token_path }]
    - dashboard_pages << { name: "Blog Posts", url: broadcasts_path, active: params[:controller] == "broadcasts" } if current_user.community_manager?

    - groups = []
    - groups << { name: "My Dashboard", url: dashboard_path, pages: dashboard_pages, active: %w(internal data_requests broadcasts).include?(params[:controller]), icon: content_tag(:i, nil, class: "fa fa-home") }
    - if current_user.reviewable_data_requests.count.positive?
      - voting_count = current_user.reviewable_data_requests.without_vote(current_user).count
      - review_pages = [{ name: "Reviews", url: reviews_path(voted: voting_count > 0 ? 0 : nil) }]
      - review_pages = []
      - groups << { name: "Reviews", url: reviews_path(voted: voting_count > 0 ? 0 : nil), active: params[:controller] == "reviews", pages: review_pages, icon: content_tag(:i, nil, class: "fa fa-balance-scale"), count: voting_count }
    - groups << { name: "Settings", url: settings_path, pages: settings_pages, active: params[:controller] == "settings", icon: content_tag(:i, nil, class: "fa fa-cog") }
    - if current_user.admin?
      - admin_pages = [{ name: "Hosting Requests", url: hosting_requests_path, count: HostingRequest.current.where(reviewed: false).count, active: params[:controller] == "hosting_requests" }, { name: "Replies", url: admin_replies_path }, { name: "Users", url: users_path, active: params[:controller] == "users" }]
      - groups << { name: "Administrative", url: admin_pages.first[:url], pages: admin_pages, active: %w(hosting_requests admin/replies users).include?(params[:controller]), icon: content_tag(:i, nil, class: "fa fa-user-md") }
      - report_pages = [{ name: "Downloads By Quarter", url: admin_downloads_by_quarter_path }, { name: "Downloads By Month", url: admin_downloads_by_month_path(user_type: "regular") }, { name: "Agreement Reports", url: admin_agreement_reports_path }, { name: "Usage Statistics", url: admin_stats_path }]
      - groups << { name: "Reports", url: report_pages.first[:url], pages: report_pages, active: !report_pages.find { |p| current_page?(p[:url]) }.nil?, icon: content_tag(:i, nil, class: "fa fa-bar-chart") }
      - configuration_pages = [{ name: "Dataset Roles", url: admin_roles_path }, { name: "Documentation Sync", url: admin_sync_path }, { name: "Tags", url: tags_path }]
      - groups << { name: "Configuration", url: configuration_pages.first[:url], pages: configuration_pages, active: !configuration_pages.find { |p| current_page?(p[:url]) }.nil?, icon: content_tag(:i, nil, class: "fa fa-cog") }

    #sidebar-nav-wrapper.sidebar-nav-wrapper.collapse
      %nav.sidebar-nav
        - groups.each do |group|
          .sidebar-nav-group{ class: group.dig(:active) || current_page?(group.dig(:url)) ? "active" : nil }
            = link_to group.dig(:url), class: "sidebar-nav-group-link" do
              = group.dig(:icon)
              = group.dig(:name)
              - if group.dig(:count).present? && group.dig(:count).positive?
                %span.badge.badge-primary= group.dig(:count)

            - if group.dig(:pages).present?
              %ul.nav.sidebar-nav-group-items
                - group.dig(:pages).each do |page|
                  %li{ class: page.dig(:active) || current_page?(page.dig(:url)) ? "active" : nil }
                    = link_to page.dig(:url), class: "ml-4" do
                      = page.dig(:name)
